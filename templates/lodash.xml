<templateSet group="lodash">
  <template name="_.ea" value="_.each($iterable$, ($item$, $name$) =&gt; {&#10;  $END$&#10;});" description="Iterables:  _.each loop (chainable)" toReformat="false" toShortenFQNames="true">
    <variable name="iterable" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.find" value="const $VAR$ = _.find($iterable$, ($item$, $name$) =&gt; {&#10;  $END$&#10;});" description="Iterables:  _.find loop (chainable)" toReformat="false" toShortenFQNames="true">
    <variable name="iterable" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.map" value="const $VAR$ = _.map($iterable$, ($item$, $name$) =&gt; {&#10;  $END$&#10;});" description="Iterables:  _.map loop (chainable)" toReformat="false" toShortenFQNames="true">
    <variable name="iterable" expression="jsArrayVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.reduce" value="const $VAR$ = _.reduce($iterable$, ($previous$, $current$, $name$) =&gt; {&#10;  $END$&#10;}, $initial$);" description="Iterables:  _.reduce loop (chainable)" toReformat="false" toShortenFQNames="true">
    <variable name="iterable" expression="jsArrayVariable()" defaultValue="&quot;arrayOrObject&quot;" alwaysStopAt="true" />
    <variable name="previous" expression="" defaultValue="&quot;previous&quot;" alwaysStopAt="true" />
    <variable name="current" expression="" defaultValue="&quot;current&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="initial" expression="" defaultValue="&quot;initial&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.some" value="const $VAR$ = _.some($iterable$, ($item$, $name$) =&gt; {&#10;  $END$&#10;});" description="Iterables:  _.some loop (chainable)" toReformat="false" toShortenFQNames="true">
    <variable name="iterable" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.pickBy" value="const $VAR$ = _.pickBy($object$, ($value$, $key$) =&gt; {&#10;  // Creates an object composed of the object properties predicate returns truthy for.&#10;  return $END$ // true for LEAVE element&#10;});" description="Creates an object composed of the object properties predicate returns truthy for." toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="false" />
    <variable name="object" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.omitBy" value="const $VAR$ = _.omitBy($object$, ($value$, $key$) =&gt; {&#10;  // Creates an object composed of the object properties predicate doesn't returns truthy for.&#10;  return $END$ // true for REMOVE element&#10;});" description="Creates an object composed of the object properties predicate doesn't returns truthy for." toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="object" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.filter" value="const $VAR$ = _.filter($collection$, ($value$, $keyOrKey$, $collection_$) =&gt; {&#10;  // Return an ARRAY of all elements predicate returns truthy for.&#10;  return $END$ // true for LEAVE element in ARRAY&#10;});" description="Return an ARRAY of all elements predicate returns truthy for" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="false" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="keyOrKey" expression="" defaultValue="&quot;keyOrKey&quot;" alwaysStopAt="true" />
    <variable name="collection" expression="" defaultValue="&quot;collection&quot;" alwaysStopAt="true" />
    <variable name="collection_" expression="" defaultValue="&quot;collection_&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.mapKeys" value="const $VAR$ = _.mapKeys($object$, ($value$, $key$, $object_$) =&gt; {&#10;  // Creates an object with keys generated by iteratee&#10;  return $END$ // new key &#10;});" description="Creates an object with keys generated by iteratee" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="false" />
    <variable name="object" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="object_" expression="" defaultValue="&quot;object_&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="_.mapValues" value="const $VAR$ = _.mapValues($object$, ($value$, $key$, $object_$) =&gt; {&#10;  // Creates an object with values generated by iteratee&#10;  return $END$ // new value &#10;});" description="Creates an object with values generated by iteratee" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;myVar&quot;" alwaysStopAt="false" />
    <variable name="object" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="object_" expression="" defaultValue="&quot;object_&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>