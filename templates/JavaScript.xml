<templateSet group="JavaScript">
  <template name="aae" value="async.auto({&#10;    fn1: (callback) =&gt; {&#10;        callback(err,'result1');&#10;        $END$&#10;    },&#10;    fn2: [&quot;fn1&quot;, (callback, scope) =&gt; {&#10;        const result1 = scope.fn1;&#10;        callback(err,'result2');&#10;    }]&#10;}, (err, scope) =&gt; {&#10;    OutCallback(err, scope.fn2)&#10;});" description="async.auto for es6" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="aaj" value="async.auto({&#10;    fn1: function (callback) {&#10;        callback(err,'result1');&#10;        $END$&#10;    },&#10;    fn2: [&quot;fn1&quot;, function (callback, scope) {&#10;        var result1 = scope.fn1;&#10;        callback(err,'result2');&#10;    }]&#10;}, function (err, scope) {&#10;    OutCallback(err, scope.fn2)&#10;});" description="async.auto for js" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="iter" value="for (let $VAR$ of $ARRAY$) {&#10;  $END$&#10;}" description="Iterate (for..of) - ES2015" toReformat="true" toShortenFQNames="true">
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array &quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ritar" value="for (var $INDEX$ = $ARRAY$.length - 1; $INDEX$ &gt;= 0; $INDEX$--) {&#10;  var $VAR$ = $ARRAY$[$INDEX$];&#10;  $END$&#10;}" description="Iterate elements of array in reverse order" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="jsSuggestIndexName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="?" value="$VAR$=($CONDITION$)?$VAL1$:$VAL2$" description="Conditional operator that assigns a value to a variable based on some condition" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAL1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAL2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="clog" value="console.log($END$);" description="console log" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="if" value="if ($CONDITION$) {&#10;    $END$&#10;}" description="'if' statement" toReformat="false" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ife" value="if ($CONDITION$) {&#10;    $END$&#10;} else {&#10;&#10;}" description="'if-else' statement" toReformat="false" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ifeif" value="if ($CONDITION$) {&#10;    $END$&#10;} else if ($NEXTCONDITION$) {&#10;&#10;} else {&#10;&#10;}" description="'if-else if -else' statement" toReformat="false" toShortenFQNames="true">
    <variable name="CONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NEXTCONDITION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="swi" value="switch ($EXPRESSION$) {&#10;case $EXPVALUE1$:&#10;    $END$&#10;    break;&#10;case $EXPVALUE2$:&#10;&#10;    break;&#10;default:&#10;&#10;}" description="'switch' statement" toReformat="true" toShortenFQNames="true">
    <variable name="EXPRESSION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPVALUE1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPVALUE2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="deb" value="debugger;" description="debugger;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="fori" value="for (var $INDEX$ = 0; $INDEX$ &lt; $ARRAY$.length; $INDEX$++) {&#10;  var $VAR$ = $ARRAY$[$INDEX$];&#10;  $END$&#10;}" description="Classic for" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="jsSuggestIndexName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="itar" value="for (let $INDEX$ = 0; $INDEX$ &lt; $ARRAY$.length; $INDEX$++) {&#10;  let $VAR$ = $ARRAY$[$INDEX$];&#10;  $END$&#10;}" description="Iterate elements of array" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="jsSuggestIndexName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>